[{"C:\\dev\\blogo\\blog\\ClientApp\\src\\index.tsx":"1","C:\\dev\\blogo\\blog\\ClientApp\\src\\reportWebVitals.ts":"2","C:\\dev\\blogo\\blog\\ClientApp\\src\\components\\Navbar.tsx":"3","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\Browse.tsx":"4","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\Latest.tsx":"5","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\NotFound.tsx":"6","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\ArticlePage.tsx":"7","C:\\dev\\blogo\\blog\\ClientApp\\src\\components\\ArticleCard.tsx":"8","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\AddArticle.tsx":"9","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\EditArticle.tsx":"10","C:\\dev\\blogo\\blog\\ClientApp\\src\\components\\InputTag.tsx":"11","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\Login.tsx":"12","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\Home.tsx":"13","C:\\dev\\blogo\\blog\\ClientApp\\src\\components\\Footer.tsx":"14","C:\\dev\\blogo\\blog\\ClientApp\\src\\components\\App.tsx":"15","C:\\dev\\blogo\\blog\\ClientApp\\src\\context\\UserContext.tsx":"16"},{"size":643,"mtime":1626987760817,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1333,"mtime":1626987552610,"results":"20","hashOfConfig":"18"},{"size":1215,"mtime":1626559697000,"results":"21","hashOfConfig":"18"},{"size":1092,"mtime":1626988116897,"results":"22","hashOfConfig":"18"},{"size":247,"mtime":1610911276418,"results":"23","hashOfConfig":"18"},{"size":2681,"mtime":1626643050338,"results":"24","hashOfConfig":"18"},{"size":1178,"mtime":1625928411458,"results":"25","hashOfConfig":"18"},{"size":2602,"mtime":1626559614068,"results":"26","hashOfConfig":"18"},{"size":4238,"mtime":1626559683260,"results":"27","hashOfConfig":"18"},{"size":2168,"mtime":1626559318412,"results":"28","hashOfConfig":"18"},{"size":2471,"mtime":1626987847954,"results":"29","hashOfConfig":"18"},{"size":2306,"mtime":1626989719563,"results":"30","hashOfConfig":"18"},{"size":232,"mtime":1626981841551,"results":"31","hashOfConfig":"18"},{"size":2389,"mtime":1626989561985,"results":"32","hashOfConfig":"18"},{"size":820,"mtime":1626987518432,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1op1idf",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"76","usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"79","usedDeprecatedRules":"37"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"82","usedDeprecatedRules":"37"},"C:\\dev\\blogo\\blog\\ClientApp\\src\\index.tsx",["83"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport \"./styles/index.css\"\nimport App from \"./components/App\";\nimport UserProvider, {UserContext} from \"./context/UserContext\";\n\nexport {UserContext, default} from \"./context/UserContext\";\n\nReactDOM.render(\n    <UserProvider>\n        <App />\n    </UserProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["84","85"],"C:\\dev\\blogo\\blog\\ClientApp\\src\\reportWebVitals.ts",[],"C:\\dev\\blogo\\blog\\ClientApp\\src\\components\\Navbar.tsx",["86"],"﻿import React,{useContext} from 'react';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport {UserContext} from \"../context/UserContext\";\r\n\r\nfunction Navbar() {\r\n    const {user} = useContext(UserContext);\r\n            \r\n        if(user.UserName){\r\n            return (\r\n                <nav className=\"main-wrapper\">\r\n                    <NavLink exact to=\"/\" activeClassName=\"is-active\">Home</NavLink>\r\n                    <NavLink to=\"/latest\" activeClassName=\"is-active\">Latest</NavLink>\r\n                    <NavLink to=\"/browse\" activeClassName=\"is-active\">Browse</NavLink>\r\n                    <NavLink to=\"/login\" activeClassName=\"is-active\">Login</NavLink>\r\n                    <NavLink to=\"/addArticle\" activeClassName=\"is-active\">AddArticle</NavLink>\r\n                </nav>\r\n            )}\r\n        else{\r\n            return (\r\n            <nav className=\"main-wrapper\">\r\n                {user.UserName}\r\n                <NavLink exact to=\"/\" activeClassName=\"is-active\">Home</NavLink>\r\n                <NavLink to=\"/latest\" activeClassName=\"is-active\">Latest</NavLink>\r\n                <NavLink to=\"/browse\" activeClassName=\"is-active\">Browse</NavLink>\r\n                <NavLink to=\"/login\" activeClassName=\"is-active\">Login</NavLink>\r\n            </nav>\r\n            )\r\n        }\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\Browse.tsx",["87"],"﻿import React from 'react';\r\nimport {ArticleCard} from \"../components/ArticleCard\";\r\n\r\ntype ArticleData ={\r\n    Data: ObjectData[]\r\n}\r\ntype Tag ={\r\n    id: number,\r\n    value: string\r\n}\r\ntype ObjectData = {\r\n    id: number,\r\n    title: string,\r\n    imgUrl:string,\r\n    created: string,\r\n    tags: Tag[]    \r\n}\r\n\r\nclass Browse extends React.Component<any> {\r\n    state: ArticleData={\r\n        Data: []\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"api/blogs\", {\r\n            method: \"GET\"\r\n        }).then(res => res.json()).then(data => this.setState({Data: data}))        \r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <div className=\"main-wrapper\">\r\n                <h1>Browse</h1>\r\n                <div className=\"articles\">\r\n                    {this.state.Data.map(function(obj){\r\n                        return(\r\n                        <ArticleCard key={obj.id} id={obj.id} title={obj.title} date={new Date(Date.parse(obj.created))}\r\n                                     tags={obj.tags}\r\n                                     imgUrl={obj.imgUrl}/>)}        \r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Browse;\r\n","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\Latest.tsx",["88"],"﻿import React, {useEffect, useState} from 'react';\r\nimport {ArticleCard} from \"../components/ArticleCard\";\r\n\r\n\r\ntype Tag = {\r\n    id: number,\r\n    value: string\r\n}\r\ntype ObjectData = {\r\n    id: number,\r\n    title: string,\r\n    imgUrl: string,\r\n    created: string,\r\n    tags: Tag[]\r\n}\r\n\r\nfunction Latest() {\r\n    const [data, setData] = useState<ObjectData[]>([]);\r\n    useEffect(() => {\r\n        fetch(\"api/blogs\", {\r\n            method: \"GET\"\r\n        }).then(res => res.json()).then(data => setData(data))\r\n    }, []);\r\n    return (\r\n        <div className=\"main-wrapper\">\r\n            <h1>Latest</h1>\r\n            <div className=\"articles\">\r\n                {data?.map(function (obj) {\r\n                        return (\r\n                            <ArticleCard key={obj.id} id={obj.id} title={obj.title} date={new Date(Date.parse(obj.created))}\r\n                                         tags={obj.tags}\r\n                                         imgUrl={obj.imgUrl}/>)\r\n                    }\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Latest;\r\n","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\NotFound.tsx",["89"],"﻿import React from 'react';\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div className=\"main-wrapper\">\r\n            <h1>404 - Not found</h1>\r\n            Sadly this page doesn't exist.\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;\r\n","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\ArticlePage.tsx",["90"],"﻿import React from 'react';\r\nimport {Link, match} from 'react-router-dom';\r\n\r\ninterface DetailParams {\r\n    id: string;\r\n}\r\n\r\ntype Tag = {\r\n    id: number,\r\n    value: string\r\n}\r\ninterface DetailsProps {\r\n    required: string;\r\n    match?: match<DetailParams>;\r\n}\r\ntype MyState = {\r\n    Title?: string,\r\n    Tags?: Tag[],\r\n    Created?: Date,\r\n    ImgUrl?: string,\r\n    Text?: any,\r\n    Data?: ObjectData[],\r\n    Author?: string\r\n};\r\ntype ObjectData = {\r\n    id: number,\r\n    title: string,\r\n    imgUrl: string,\r\n    created: Date,\r\n    tags: Tag[],\r\n    author: string\r\n\r\n}\r\n\r\nclass Article extends React.Component<DetailsProps, MyState> {\r\n    state: MyState = {\r\n        Title: \"\",\r\n        Tags: [],\r\n        Created: new Date(),\r\n        ImgUrl: \"\",\r\n        Text: \"\",\r\n        Data: [],\r\n        Author: \"\"\r\n\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"/api/blogs/\" + this.props.match?.params.id, {\r\n            method: \"GET\"\r\n        }).then(res => res.json()).then(data => this.setState({Data: data}, () => {\r\n            this.setState({\r\n                Title: data.title,\r\n                Created: new Date(Date.parse(data.created)),\r\n                ImgUrl: data.imgUrl,\r\n                Text: data.text,\r\n                Author: data.author,\r\n                Tags: data.tags\r\n            })\r\n        }))\r\n    }\r\n        render(){\r\n            return (\r\n                <div className=\"main-wrapper articleView\">\r\n                    <div>\r\n                        <Link style={{width: '100%', height: '100%'}}\r\n                              to={`/editArticle/${this.props.match?.params.id}`}>\r\n                            edit\r\n                        </Link>\r\n                    </div>\r\n                    <img className=\"main-img\" src={this.state.ImgUrl} alt=\"\"/>\r\n                    <div className=\"tags\">\r\n                        {this.state.Tags?.map((e,key) =>{\r\n                            return (<div key={key}>{e.value}</div>)\r\n                        })}\r\n                    </div>\r\n                    <h1>{this.state.Title}</h1>\r\n                    <div className=\"articleInfo\">\r\n                    {\r\n                        this.state.Created && \r\n                        <time className=\"date\" dateTime={this.state.Created.toDateString()}>{this.state.Created.getDate()}.{this.state.Created.getMonth()}.{this.state.Created.getFullYear()}</time>}\r\n                        {\" \"}\r\n                        /\r\n                        {\" \"+this.state.Author}</div>\r\n                    <div className=\"content\" dangerouslySetInnerHTML={{__html: this.state.Text}}></div>\r\n                </div>\r\n            )\r\n        }\r\n}\r\nexport default Article","C:\\dev\\blogo\\blog\\ClientApp\\src\\components\\ArticleCard.tsx",["91"],"﻿import React from 'react';\r\nimport {Link } from 'react-router-dom'\r\n\r\ntype Tag = {\r\n    id: number,\r\n    value: string\r\n}\r\ntype ArticleCardProps = {\r\n    id: number,\r\n    title: string,\r\n    tags: Tag[],\r\n    date: Date,\r\n    imgUrl: string\r\n}\r\n\r\nexport const ArticleCard = ({id, title, tags,date,imgUrl} : ArticleCardProps)=> {\r\n    return (\r\n            <div className=\"article\" style={{cursor:\"pointer\"}}>\r\n\r\n                <Link className=\"article-link\" to={`/article/${id}`}>\r\n                </Link>\r\n                <img src={imgUrl} alt=\"\"/>\r\n                <div className=\"article-lower\">\r\n                    <h3>{title}</h3>\r\n                    <div className=\"article-lower-subInfo\">\r\n                        <div className=\"tags\">\r\n                            {tags && tags.map((el,i)=> <span key={i}>{el.value}</span> )}\r\n                        </div>\r\n                        { date&& <time className=\"date\"\r\n                                      dateTime={date.toDateString()}>{date.getDate()}.{date.getMonth()}.{date.getFullYear()}</time>\r\n                        }\r\n                    </div>    \r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\AddArticle.tsx",["92"],"﻿import React from 'react'\r\nimport ReactQuill from \"react-quill\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport InputTag from \"../components/InputTag\";\r\n\r\n\r\ntype MyState = {\r\n    Title: string,\r\n    Tags: string[],\r\n    Created: Date,\r\n    ImgUrl: string,\r\n    Text: any,\r\n    Author: string\r\n};\r\n\r\nclass AddArticle extends React.Component<MyState>{ \r\n    state : MyState = {\r\n        Title: \"\",\r\n        Tags: [],\r\n        Created: new Date(),\r\n        ImgUrl: \"\",\r\n        Text: \"\",\r\n        Author: \"\"\r\n        \r\n    }\r\n    submitNew = (e: { preventDefault: () => void; }) => {\r\n        e.preventDefault();\r\n        let tagsObj = [\r\n        ]\r\n        for (let i = 0; i < this.state.Tags.length; i++) {\r\n            tagsObj.push({\"Value\":this.state.Tags[i]})\r\n        }\r\n        let info = {\r\n            Title: this.state.Title,\r\n            ImgUrl: this.state.ImgUrl,\r\n            Tags: tagsObj,\r\n            Created: new Date(),\r\n            Author: this.state.Author,\r\n            Text: this.state.Text\r\n        }\r\n        console.log(info)\r\n        fetch(`/api/blogs`, {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(info)\r\n        })\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err));\r\n    }\r\n    onChange = (e: React.FormEvent<HTMLInputElement>): void => {\r\n        this.setState({[e.currentTarget.name]: e.currentTarget.value});\r\n    };\r\n    render() {\r\n        return (\r\n        <div className=\"main-wrapper\">\r\n            <h1>Add article</h1>\r\n            <form className=\"main-wrapper\" onSubmit={this.submitNew}>\r\n                <div className=\"input-wrapper\">\r\n                    <input placeholder=\"Title\" type=\"text\" name=\"Title\" onChange={this.onChange} value={this.state.Title}/>\r\n                </div>\r\n                <div className=\"input-wrapper\">\r\n                    <input placeholder=\"Image Url\" type=\"text\" name=\"ImgUrl\" onChange={this.onChange} value={this.state.ImgUrl}/>\r\n                </div>\r\n                <div className=\"input-wrapper\">\r\n                    <label>Tags:</label>\r\n                    <InputTag Items={this.state.Tags} toggleState={(e, tags) => this.setState({Tags:tags})} />\r\n                </div>\r\n                <div className=\"input-wrapper\">\r\n                    <ReactQuill theme=\"snow\" value={this.state.Text} onChange={(e) => this.setState({Text: e})}/>\r\n                </div>\r\n                <button type=\"submit\">Post article</button>\r\n            </form>\r\n        </div>)\r\n    }\r\n}\r\nexport default AddArticle","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\EditArticle.tsx",["93","94"],"﻿import React from 'react'\r\nimport ReactQuill from \"react-quill\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {match} from 'react-router-dom';\r\nimport InputTag from \"../components/InputTag\";\r\n\r\ntype Tag = {\r\n    id: number,\r\n    value: string\r\n}\r\ntype MyState = {\r\n    Id?: number,\r\n    Title?: string,\r\n    Tags?: string[],\r\n    Created?: Date,\r\n    ImgUrl?: string,\r\n    Text?: any,\r\n    Data?: ObjectData[],\r\n    Author?: string\r\n};\r\ntype ObjectData = {\r\n    id: number,\r\n    title: string,\r\n    imgUrl: string,\r\n    created: Date,\r\n    tags: string[],\r\n    author: string\r\n\r\n}\r\n\r\ninterface DetailParams {\r\n    id: string;\r\n}\r\n\r\ninterface DetailsProps {\r\n    required: string;\r\n    match?: match<DetailParams>;\r\n}\r\nclass EditArticle extends React.Component<DetailsProps, MyState> {\r\n    state: MyState = {\r\n        Id: 0,\r\n        Title: \"\",\r\n        Tags: [],\r\n        Created: new Date(),\r\n        ImgUrl: \"\",\r\n        Text: \"\",\r\n        Data: [],\r\n        Author: \"\"\r\n\r\n    }\r\n\r\n    componentDidMount() {        \r\n        fetch(\"/api/blogs/\"+ this.props.match?.params.id, {\r\n            method: \"GET\"\r\n        }).then(res => res.json()).then(data => this.setState({Data: data}, () => {\r\n            //console.log(this.state.Data)\r\n            let newTags = []\r\n            console.log(data)\r\n            for (let i = 0; i < data.tags.length; i++) {\r\n                console.log(data.tags[i].value)\r\n                newTags.push(data.tags[i].value)\r\n            }\r\n            console.log(newTags)\r\n            this.setState({\r\n                Id: data.id,\r\n                Title: data.title,\r\n                Created: new Date(Date.parse(data.created)),\r\n                ImgUrl: data.imgUrl,\r\n                Text: data.text,\r\n                Author: data.author,\r\n                Tags: newTags\r\n            })\r\n        }))\r\n    }\r\n\r\n    editNew = (e: { preventDefault: () => void; }) => {\r\n        e.preventDefault();\r\n        let tagsObj = []\r\n        if (this.state.Tags)\r\n            for (let i = 0; i < this.state.Tags.length; i++) {\r\n                tagsObj.push({\"Value\": this.state.Tags[i]})\r\n            }\r\n        let info = {\r\n            Id: this.state.Id,\r\n            Title: this.state.Title,\r\n            ImgUrl: this.state.ImgUrl,\r\n            Tags: tagsObj,\r\n            Created: new Date(),\r\n            Author: this.state.Author,\r\n            Text: this.state.Text\r\n        }\r\n        fetch(`/edit`, {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(info)\r\n        })\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err));\r\n    }\r\n    onChange = (e: React.FormEvent<HTMLInputElement>): void => {\r\n        this.setState({[e.currentTarget.name]: e.currentTarget.value});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-wrapper\">\r\n                <h1>Edit article {this.state.Id}</h1>\r\n                <form className=\"main-wrapper\" onSubmit={this.editNew}>\r\n                    <div className=\"input-wrapper\">\r\n                        <input placeholder=\"Title\" type=\"text\" name=\"Title\" onChange={this.onChange} value={this.state.Title}/>\r\n                    </div>\r\n                    <div className=\"input-wrapper\">\r\n                        <input placeholder=\"Image Url\" type=\"text\" name=\"ImgUrl\" onChange={this.onChange} value={this.state.ImgUrl}/>\r\n                    </div>\r\n                    <div className=\"input-wrapper\">\r\n                        <input placeholder=\"Author\" type=\"text\" name=\"Author\" onChange={this.onChange} value={this.state.Author}/>\r\n                    </div>\r\n                    <div className=\"input-wrapper\">\r\n                        <InputTag Items={this.state.Tags ? this.state.Tags : []} toggleState={(e, tags) => this.setState({Tags: tags})}/>\r\n                    </div>\r\n                    <div className=\"input-wrapper\">\r\n                        <ReactQuill theme=\"snow\" value={this.state.Text} onChange={(e) => this.setState({Text: e})}/>\r\n                    </div>\r\n                    <button type=\"submit\">Edit article</button>\r\n                </form>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default EditArticle","C:\\dev\\blogo\\blog\\ClientApp\\src\\components\\InputTag.tsx",["95"],"﻿import React from 'react'\r\n\r\n\r\ntype MyState = {\r\n    Tags?: string[],\r\n    Input?: string\r\n};\r\ntype ChildProps = {\r\n    toggleState: (e: React.MouseEvent, tags: string[]) => void;\r\n    Items: string[]\r\n// −−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−^^^^^^^^^^^^^^^\r\n}\r\n\r\n\r\nclass InputTag extends React.Component<ChildProps,MyState> {\r\n    state: MyState = {\r\n        Tags: this.props.Items,\r\n        Input: \"\"\r\n    }\r\n\r\n    componentDidUpdate(prevProps: ChildProps) {\r\n        if (this.props.Items !== prevProps.Items) {\r\n            this.setState({Tags: this.props.Items})\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({Tags: this.props.Items})\r\n    }\r\n\r\n    onChange = (e: React.FormEvent<HTMLInputElement>): void => {\r\n        this.setState({[e.currentTarget.name]: e.currentTarget.value});\r\n    };\r\n    addTag = (event: React.MouseEvent<HTMLElement>): void =>{\r\n        let joined = this.state.Tags?.concat(this.state.Input ? this.state.Input : \"\");\r\n        this.setState({Tags: joined, Input: \"\"})\r\n        this.props.toggleState(event, joined ? joined : [])\r\n    }\r\n    removeTag (event: React.MouseEvent<HTMLElement>, tag: string) {\r\n        const newList = this.state.Tags?.filter((item) => item !== tag);\r\n        this.setState({Tags: newList})\r\n        this.props.toggleState(event, newList ? newList : [])\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"input-wrapper\">\r\n                <ul>\r\n                    {this.state.Tags?.map((tag, key) => {\r\n                        return (\r\n                            <>\r\n                                <li key={key}>{tag}</li>\r\n                                <button type=\"button\" onClick={(e) => this.removeTag(e,tag)}>Remove</button>\r\n                            </>)\r\n                        }\r\n                    )}\r\n                </ul>\r\n                <input placeholder=\"Tag Name\" type=\"text\" name=\"Input\" value={this.state.Input} onChange={this.onChange}/>\r\n                <button type=\"button\" onClick={this.addTag}>Add</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputTag",["96","97"],"C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\Login.tsx",["98","99","100"],"﻿import React, {useContext} from 'react';\r\nimport {UserContext} from \"../context/UserContext\";\r\n\r\ntype MyState = {\r\n    UserName: string,\r\n    Email: string,\r\n    Password: string,\r\n};\r\n\r\nclass Login extends React.Component<MyState> {\r\n\r\n    static contextType = UserContext\r\n    state: MyState = {\r\n        UserName: \"pepa\",\r\n        Email: \"pepa@gmail.com\",\r\n        Password: \"pepa\",\r\n\r\n    }\r\n    submitNew = (e: { preventDefault: () => void; }) => {\r\n        e.preventDefault();\r\n        let user = {\r\n            UserName: this.state.UserName,\r\n            EmailAddress: this.state.Email,\r\n            Password: this.state.Password,\r\n            Created: new Date()\r\n        };\r\n        \r\n        fetch(`/api/login`, {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(user)\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n                let contextUser = {\r\n                    Password: this.state.Password,\r\n                    EmailAddress: this.state.Email,\r\n                    UserName: this.state.UserName\r\n                }\r\n                if(res.status==200)\r\n                    this.context.login(contextUser)       \r\n                else\r\n                    this.context.login({})\r\n            })\r\n            .catch(err => console.log(err));\r\n        \r\n    }\r\n    onChange = (e: React.FormEvent<HTMLInputElement>): void => {\r\n        this.setState({[e.currentTarget.name]: e.currentTarget.value});\r\n    };\r\n    render(){\r\n    return (\r\n        <div className=\"main-wrapper\">\r\n            <h1>Login to your account!</h1>\r\n            <form className=\"main-wrapper\" onSubmit={this.submitNew}>\r\n                <div className=\"input-wrapper\">\r\n                    <input placeholder=\"User Name\" type=\"text\" name=\"UserName\" onChange={this.onChange} value={this.state.UserName}/>\r\n                </div>\r\n                <div className=\"input-wrapper\">\r\n                    <input placeholder=\"Email\" type=\"email\" name=\"Email\" onChange={this.onChange} value={this.state.Email}/>\r\n                </div>\r\n                <div className=\"input-wrapper\">\r\n                    <input placeholder=\"Password\" type=\"password\" name=\"Password\" onChange={this.onChange} value={this.state.Password}/>\r\n                </div>\r\n                <button type=\"submit\" >Log in</button>\r\n            </form>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","C:\\dev\\blogo\\blog\\ClientApp\\src\\pages\\Home.tsx",["101","102"],"﻿import React, {useEffect, useState} from 'react';\r\nimport {ArticleCard} from \"../components/ArticleCard\";\r\n\r\ntype Tag = {\r\n    id: number,\r\n    value: string\r\n}\r\ntype ObjectData = {\r\n    id: number,\r\n    title: string,\r\n    imgUrl: string,\r\n    created: string,\r\n    tags: Tag[],\r\n    author: string\r\n}\r\nfunction Home() {\r\n    const [Data, setData] = useState<ObjectData[]>([]);\r\n    const [date, setDate] = useState<Date>(new Date())\r\n    useEffect(() => {\r\n        fetch(\"api/blogs\", {\r\n            method: \"GET\"\r\n        }).then(res => res.json()).then(data => setData(data),()=>{\r\n            console.log(Data[0])\r\n            console.log(\"Data[0]\")\r\n            let newDate = new Date(Date.parse(Data[0].created))\r\n            setDate(newDate)\r\n        })\r\n    }, []);\r\n    if(Data && Data[0])\r\n    return (\r\n        <div className=\"main-wrapper\">\r\n            <div className=\"home-article\">\r\n                <div className=\"home-article-left\">\r\n                    <img src={Data[0].imgUrl} alt=\"\"/>                    \r\n                </div>\r\n                <div className=\"home-article-right\">\r\n                    <h1>{Data[0].title}</h1>\r\n                    <div className=\"tags\">\r\n                    {Data[0].tags.map((tag,key) => {\r\n                        return <div key={key} >{tag.value}</div>\r\n                    })}\r\n                    </div>\r\n\r\n                    <div className=\"articleInfo\">\r\n                        {date && <time className=\"date\"\r\n                                       dateTime={date.toDateString()}>{date.getDate()}.{date.getMonth()}.{date.getFullYear()}</time>\r\n                        }/\r\n                        {Data[0].author}           \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"articles\">\r\n                {Data?.slice(1).map(function (obj) {\r\n                        return (\r\n                            <ArticleCard key={obj.id} id={obj.id} title={obj.title} date={new Date(Date.parse(obj.created))}\r\n                                         tags={obj.tags}\r\n                                         imgUrl={obj.imgUrl}/>)\r\n                    }\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n    else{\r\n        return <>Loading</>\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","C:\\dev\\blogo\\blog\\ClientApp\\src\\components\\Footer.tsx",["103"],"﻿import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"main-wrapper\">\r\n            <p>© 2021, Jan Maruscak. All rights reserved. </p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","C:\\dev\\blogo\\blog\\ClientApp\\src\\components\\App.tsx",["104","105"],"﻿import React, {useContext, useState} from \"react\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport Home from \"../pages/Home\";\r\nimport Latest from \"../pages/Latest\";\r\nimport Browse from \"../pages/Browse\";\r\nimport Login from \"../pages/Login\";\r\nimport ArticlePage from \"../pages/ArticlePage\";\r\nimport EditArticle from \"../pages/EditArticle\";\r\nimport AddArticle from \"../pages/AddArticle\";\r\nimport NotFound from \"../pages/NotFound\";\r\nimport Footer from \"./Footer\";\r\nimport {UserContext} from \"../context/UserContext\";\r\n\r\nfunction App(){\r\n    const {user} = useContext(UserContext);\r\n    if(user.UserName){\r\n    return(\r\n        <React.StrictMode>\r\n            <Router>\r\n                <Navbar/>\r\n                <main style={{minHeight: \"75vh\", marginBottom: \"50px\"}}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home}/>\r\n                        <Route exact path=\"/latest\" component={Latest}/>\r\n                        <Route exact path=\"/browse\" component={Browse}/>\r\n                        <Route exact path=\"/login\" component={Login}/>\r\n                        <Route exact path=\"/article/:id\" component={ArticlePage}/>\r\n                        <Route exact path=\"/editArticle/:id\" component={EditArticle}/>\r\n                        <Route exact path=\"/addArticle\" component={AddArticle}/>\r\n                        <Route component={NotFound}/>\r\n                    </Switch>\r\n                </main>\r\n                <Footer/>\r\n            </Router>\r\n        </React.StrictMode>\r\n    )}\r\n    else{\r\n        return(\r\n        <React.StrictMode>\r\n            <Router>\r\n                <Navbar/>\r\n                <main style={{minHeight: \"75vh\"}}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home}/>\r\n                        <Route exact path=\"/latest\" component={Latest}/>\r\n                        <Route exact path=\"/browse\" component={Browse}/>\r\n                        <Route exact path=\"/login\" component={Login}/>\r\n                        <Route exact path=\"/article/:id\" component={ArticlePage}/>\r\n                        <Route component={NotFound}/>\r\n                    </Switch>\r\n                </main>\r\n                <Footer/>\r\n            </Router>\r\n        </React.StrictMode>\r\n    )\r\n    }\r\n}\r\n\r\nexport default App;","C:\\dev\\blogo\\blog\\ClientApp\\src\\context\\UserContext.tsx",["106"],"﻿import React, {createContext, useState, FC} from \"react\";\r\n\r\nexport type UserContextType = {\r\n    user: IUser;\r\n    login: (User: IUser) => void;\r\n}\r\n\r\nconst contextDefaultValues: UserContextType = {\r\n    user: {UserName:\"\",Password:\"\",EmailAddress:\"\"},\r\n    login: () => {\r\n    }\r\n};\r\n\r\nexport const UserContext = createContext<UserContextType>(\r\n    contextDefaultValues\r\n);\r\n\r\nconst UserProvider: FC = ({children}) => {\r\n    const [user, setUser] = useState<IUser>(contextDefaultValues.user);\r\n\r\n    const login = (newUser: IUser) => {\r\n        setUser(newUser)\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                user,\r\n                login\r\n            }}\r\n        >\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nexport default UserProvider;\r\n",{"ruleId":"107","severity":1,"message":"108","line":6,"column":23,"nodeType":"109","messageId":"110","endLine":6,"endColumn":34},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"119"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"120"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"121"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"122"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"123"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"124"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"125"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"126"},{"ruleId":"107","severity":1,"message":"127","line":7,"column":6,"nodeType":"109","messageId":"110","endLine":7,"endColumn":9},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"128"},{"ruleId":"111","replacedBy":"129"},{"ruleId":"113","replacedBy":"130"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"131"},{"ruleId":"107","severity":1,"message":"132","line":1,"column":16,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"133","severity":1,"message":"134","line":40,"column":30,"nodeType":"135","messageId":"118","endLine":40,"endColumn":32},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"136"},{"ruleId":"137","severity":1,"message":"138","line":28,"column":8,"nodeType":"139","endLine":28,"endColumn":10,"suggestions":"140"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"141"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"142"},{"ruleId":"107","severity":1,"message":"143","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","messageId":"118","fix":"144"},"@typescript-eslint/no-unused-vars","'UserContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["145"],"no-negated-in-lhs",["146"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"147","text":"148"},{"range":"149","text":"148"},{"range":"150","text":"148"},{"range":"151","text":"148"},{"range":"152","text":"148"},{"range":"153","text":"148"},{"range":"154","text":"148"},{"range":"155","text":"148"},"'Tag' is defined but never used.",{"range":"156","text":"148"},["145"],["146"],{"range":"157","text":"148"},"'useContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",{"range":"158","text":"148"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Data'. Either include it or remove the dependency array.","ArrayExpression",["159"],{"range":"160","text":"148"},{"range":"161","text":"148"},"'useState' is defined but never used.",{"range":"162","text":"148"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],{"desc":"163","fix":"164"},[-1,0],[-1,0],[-1,0],"Update the dependencies array to be: [Data]",{"range":"165","text":"166"},[769,771],"[Data]"]